import pytest
import os

from config import read_subscribe_config_from_env

from entrypoint import ensure_subscribed

NON_EXISTENT_SUBSCRIPTION_ID = '00000000000000000000000000000005'


def in_gocd():
    return os.getenv('GO_PIPELINE_NAME') is not None


@pytest.mark.skipif(condition=in_gocd(), reason='currently connection to opentest and NEMS only working from local laptop')
def test_that_a_subscription_is_created_if_none_already_exists():
    config = read_subscribe_config_from_env()

    config.nems_subscription_id = NON_EXISTENT_SUBSCRIPTION_ID

    result = ensure_subscribed(config=config)

    assert result == NON_EXISTENT_SUBSCRIPTION_ID
