format_version: 4
common:
  approval: &manual_approval
    type: manual
    allow_only_on_success: true
  promote: &promote
    clean_workspace: true
    resources:
      - docker
    tasks:
      - exec:
          command: /bin/bash
          arguments:
            - -c
            - ./tasks promote_docker_image
  deploy: &deploy
    clean_workspace: true
    resources:
      - docker
    artifacts:
      - build:
          source: terraform/nhs_deployment.tfplan
          destination: terraform/
    tasks:
      - exec:
          command: /bin/bash
          arguments:
            - -c
            - ./tasks tf_plan create
      - exec:
          command: /bin/bash
          arguments:
            - -c
            - ./tasks tf_apply
      - exec:
          command: /bin/bash
          arguments:
            - -c
            - ./tasks wait_ecs

pipelines:
  mesh-forwarder:
    group: linear-spike
    label_template: "${COUNT}-${git[:8]}"
    materials:
      git:
        type: configrepo
        blacklist:
          - docs/**/*.*
          - nems-subscriber/**/*.*
          - gocd/nems-subscriber.gocd.yml
      mesh_forwarder_imported_image:
        pipeline: prm-mesh-aws-forwarder
        stage: build_inbox_forwarder
    stages:
      - import:
          resources:
            - docker
          clean_workspace: true
          tasks:
            - exec:
                command: /bin/bash
                arguments:
                  - -c
                  - SOURCE_IMAGE_TAG=$GO_DEPENDENCY_LABEL_MESH_FORWARDER_IMPORTED_IMAGE ./tasks _push_forwarder_image_to_repo_ecr
      - promote.dev:
          <<: *promote
          environment_variables:
            NHS_ENVIRONMENT: dev
      - deploy.dev:
          <<: *deploy
          environment_variables:
            NHS_ENVIRONMENT: dev
      - promote.test:
          <<: *promote
          approval: *manual_approval
          environment_variables:
            NHS_ENVIRONMENT: test
      - deploy.test:
          <<: *deploy
          environment_variables:
            NHS_ENVIRONMENT: test
      - promote.pre-prod:
          <<: *promote
          approval: *manual_approval
          environment_variables:
            NHS_ENVIRONMENT: pre-prod
      - deploy.pre-prod:
          <<: *deploy
          environment_variables:
            NHS_ENVIRONMENT: pre-prod
      - promote.prod:
          <<: *promote
          approval: *manual_approval
          environment_variables:
            NHS_ENVIRONMENT: prod
      - deploy.prod:
          <<: *deploy
          environment_variables:
            NHS_ENVIRONMENT: prod
